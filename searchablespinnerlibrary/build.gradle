apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'searchable-spinner'

    publishedGroupId = 'com.toptoche.searchablespinner'
    libraryName = 'SearchableSpinner'
    artifact = 'searchable-spinner'

    libraryDescription = 'A simple spinner with an extra functionality of searching the items in the spinner.'

    siteUrl = 'https://github.com/JuanArias-code/SearchableSpinner'
    gitUrl = 'https://github.com/JuanArias-code/SearchableSpinner.git'

    libraryVersion = '1.3.1'

    developerId = 'JuanArias-code'
    developerName = 'Juan Arias'
    developerEmail = 'juanfearias97@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 34
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 34
        versionCode 8
        versionName "1.3.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

version = "1.3.1"

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "SearchableSpinner"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

group = "com.toptoche.searchablespinner"



dependencies {
    // Define any dependencies here
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions {
    doLast {
        println project.getConvention()
    }
}
